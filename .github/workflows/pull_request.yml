name: PullRequestBuild

on:
  pull_request:
    branches:
      - master

env:
  GITHUB_REF: ${{ github.ref }}
  GITHUB_SHA: ${{ github.sha }}
  IMAGE_PREFIX: pangeo/pr-

jobs:
  base-image:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Print Environment Variables
      run: |
        echo $GITHUB_SHA
        echo $( git rev-parse --short ${GITHUB_SHA} )
    - name: Enable Pip Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
        repo2docker --version
        docker version
    - name: Build Image
      run: |
        python3 build.py --image-prefix=${IMAGE_PREFIX} base-notebook
    - name: Authenticate with DockerHub
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push Image to DockerHub (latest & sha tags)
      run: |
        IMAGE=base-notebook
        CALVER="$( date -u '+%Y.%m.%d' )"
        SHA="$( git rev-parse --short ${GITHUB_SHA} )"
        DOCKER_TAG=${CALVER}-${SHA}

        IMAGE_NAME=${IMAGE_PREFIX}${IMAGE}:${DOCKER_TAG}
        IMAGE_LATEST=${IMAGE_PREFIX}${IMAGE}:latest
        ONBUILD_IMAGE_NAME=${IMAGE_PREFIX}${IMAGE}-onbuild:${DOCKER_TAG}
        ONBUILD_IMAGE_LATEST=${IMAGE_PREFIX}${IMAGE}-onbuild:latest

        docker tag $IMAGE_NAME $IMAGE_LATEST
        docker tag $ONBUILD_IMAGE_NAME $ONBUILD_IMAGE_LATEST

        docker push $IMAGE_LATEST
        docker push $IMAGE_NAME
        docker push $ONBUILD_IMAGE_LATEST
        docker push $ONBUILD_IMAGE_NAME

  onbuild-images:
    needs: base-notebook
    strategy:
      fail-fast: false
      matrix:
        IMAGE: [pangeo-notebook, esip-notebook]
    name: ${{ matrix.IMAGE }}
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
        repo2docker --version
        docker version
    - name: Authenticate with DockerHub
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build Image
      run: |
        python3 build.py --image-prefix=${IMAGE_PREFIX} ${{ matrix.IMAGE }}
    - name: Push Image to DockerHub (latest & sha tags)
      run: |
        IMAGE=${{ matrix.IMAGE }}
        CALVER="$( date -u '+%Y.%m.%d' )"
        SHA="$( git rev-parse --short ${GITHUB_SHA} )"
        DOCKER_TAG=${CALVER}-${SHA}

        IMAGE_NAME=${IMAGE_PREFIX}${IMAGE}:${DOCKER_TAG}
        IMAGE_LATEST=${IMAGE_PREFIX}${IMAGE}:latest
        ONBUILD_IMAGE_NAME=${IMAGE_PREFIX}${IMAGE}-onbuild:${DOCKER_TAG}
        ONBUILD_IMAGE_LATEST=${IMAGE_PREFIX}${IMAGE}-onbuild:latest

        docker tag $IMAGE_NAME $IMAGE_LATEST
        docker tag $ONBUILD_IMAGE_NAME $ONBUILD_IMAGE_LATEST

        docker push $IMAGE_LATEST
        docker push $IMAGE_NAME
        docker push $ONBUILD_IMAGE_LATEST
        docker push $ONBUILD_IMAGE_NAME
